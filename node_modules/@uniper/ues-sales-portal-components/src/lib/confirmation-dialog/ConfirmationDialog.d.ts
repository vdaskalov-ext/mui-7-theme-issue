import { FC, PropsWithChildren, ReactNode } from 'react';
export interface ConfirmationDialogConfig {
    onAbort?: VoidFunction;
    onConfirm: VoidFunction;
    title: string;
    description: string;
    content?: ReactNode;
    variant?: 'confirmation' | 'information';
}
export interface ConfirmationDialogTexts {
    abort: {
        label: string;
        ariaLabel?: (title: string) => string;
    };
    confirm: {
        label: string;
        ariaLabel?: (title: string) => string;
    };
}
export type ConfirmationDialogTranslations = {
    [key in Exclude<ConfirmationDialogConfig['variant'], undefined>]?: ConfirmationDialogTexts;
};
type ConfirmationDialogProps = ConfirmationDialogConfig & {
    open: boolean;
    translation: ConfirmationDialogTranslations;
};
export declare const ConfirmationDialog: FC<ConfirmationDialogProps>;
type ConfirmationDialogProviderProps = {
    translation: ConfirmationDialogTranslations;
};
export declare const ConfirmationDialogProvider: FC<PropsWithChildren<ConfirmationDialogProviderProps>>;
export declare const useConfirmationDialog: (props: ConfirmationDialogConfig) => {
    show: (config?: Partial<ConfirmationDialogConfig>) => void;
};
export {};
