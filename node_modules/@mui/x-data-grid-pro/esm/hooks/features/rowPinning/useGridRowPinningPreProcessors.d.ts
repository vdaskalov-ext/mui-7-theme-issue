import { RefObject } from '@mui/x-internals/types';
import { GridHydrateRowsValue } from '@mui/x-data-grid/internals';
import { GridRowId, GridRowModel } from '@mui/x-data-grid';
import { GridPrivateApiPro } from "../../../models/gridApiPro.js";
import type { GridPinnedRowsProp } from "./gridRowPinningInterface.js";
type GridPinnedRowPosition = keyof GridPinnedRowsProp;
export declare function addPinnedRow({
  groupingParams,
  rowModel,
  rowId,
  position,
  apiRef,
  isAutoGenerated
}: {
  groupingParams: GridHydrateRowsValue;
  rowModel: GridRowModel;
  rowId: GridRowId;
  position: GridPinnedRowPosition;
  apiRef: RefObject<GridPrivateApiPro>;
  isAutoGenerated: boolean;
}): {
  dataRowIdToModelLookup: {
    [x: string]: import("@mui/x-data-grid").GridValidRowModel;
  };
  tree: {
    [x: string]: import("@mui/x-data-grid").GridTreeNode;
    [x: number]: import("@mui/x-data-grid").GridTreeNode;
  };
  treeDepths: {
    [depth: number]: number;
  };
  dataRowIds: GridRowId[];
  additionalRowGroups?: {
    pinnedRows?: import("@mui/x-data-grid/internals").GridPinnedRowsState;
  } | undefined;
};
export declare const useGridRowPinningPreProcessors: (apiRef: RefObject<GridPrivateApiPro>) => void;
export {};