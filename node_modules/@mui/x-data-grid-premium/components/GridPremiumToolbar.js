"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;
var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard").default;
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.GridPremiumToolbar = GridPremiumToolbar;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));
var React = _interopRequireWildcard(require("react"));
var _internals = require("@mui/x-data-grid-pro/internals");
var _xDataGridPro = require("@mui/x-data-grid-pro");
var _export = require("./export");
var _useGridRootProps = require("../hooks/utils/useGridRootProps");
var _useGridApiContext = require("../hooks/utils/useGridApiContext");
var _PivotPanelTrigger = require("./pivotPanel/PivotPanelTrigger");
var _utils = require("../hooks/features/pivoting/utils");
var _aiAssistantPanel = require("./aiAssistantPanel");
var _jsxRuntime = require("react/jsx-runtime");
const _excluded = ["excelOptions"];
function GridPremiumToolbar(props) {
  const rootProps = (0, _useGridRootProps.useGridRootProps)();
  const apiRef = (0, _useGridApiContext.useGridApiContext)();
  const other = (0, _objectWithoutPropertiesLoose2.default)(props, _excluded);
  const additionalItems = /*#__PURE__*/(0, _jsxRuntime.jsxs)(React.Fragment, {
    children: [(0, _utils.isPivotingAvailable)(rootProps) && /*#__PURE__*/(0, _jsxRuntime.jsx)(_PivotPanelTrigger.PivotPanelTrigger, {
      render: (triggerProps, state) => /*#__PURE__*/(0, _jsxRuntime.jsx)(rootProps.slots.baseTooltip, {
        title: apiRef.current.getLocaleText('toolbarPivot'),
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_xDataGridPro.ToolbarButton, (0, _extends2.default)({}, triggerProps, {
          color: state.active ? 'primary' : 'default',
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)(rootProps.slots.pivotIcon, {
            fontSize: "small"
          })
        }))
      })
    }), rootProps.aiAssistant && /*#__PURE__*/(0, _jsxRuntime.jsx)(_aiAssistantPanel.AiAssistantPanelTrigger, {
      render: triggerProps => /*#__PURE__*/(0, _jsxRuntime.jsx)(rootProps.slots.baseTooltip, {
        title: apiRef.current.getLocaleText('toolbarAssistant'),
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_xDataGridPro.ToolbarButton, (0, _extends2.default)({}, triggerProps, {
          color: "default",
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)(rootProps.slots.aiAssistantIcon, {
            fontSize: "small"
          })
        }))
      })
    })]
  });
  const additionalExportMenuItems = !props.excelOptions?.disableToolbarButton ? onMenuItemClick => /*#__PURE__*/(0, _jsxRuntime.jsx)(_export.ExportExcel, {
    render: /*#__PURE__*/(0, _jsxRuntime.jsx)(rootProps.slots.baseMenuItem, (0, _extends2.default)({}, rootProps.slotProps?.baseMenuItem)),
    options: props.excelOptions,
    onClick: onMenuItemClick,
    children: apiRef.current.getLocaleText('toolbarExportExcel')
  }) : undefined;
  if (process.env.NODE_ENV !== "production") additionalExportMenuItems.displayName = "additionalExportMenuItems";
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_internals.GridToolbar, (0, _extends2.default)({}, other, {
    additionalItems: additionalItems,
    additionalExportMenuItems: additionalExportMenuItems
  }));
}