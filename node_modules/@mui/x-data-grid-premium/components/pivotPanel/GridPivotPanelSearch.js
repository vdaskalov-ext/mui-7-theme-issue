"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard").default;
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.GridPivotPanelSearch = GridPivotPanelSearch;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var React = _interopRequireWildcard(require("react"));
var _xDataGridPro = require("@mui/x-data-grid-pro");
var _system = require("@mui/system");
var _internals = require("@mui/x-data-grid-pro/internals");
var _composeClasses = _interopRequireDefault(require("@mui/utils/composeClasses"));
var _useGridApiContext = require("../../hooks/utils/useGridApiContext");
var _useGridRootProps = require("../../hooks/utils/useGridRootProps");
var _jsxRuntime = require("react/jsx-runtime");
const useUtilityClasses = ownerState => {
  const {
    classes
  } = ownerState;
  const slots = {
    container: ['pivotPanelSearchContainer']
  };
  return (0, _composeClasses.default)(slots, _xDataGridPro.getDataGridUtilityClass, classes);
};
const GridPivotPanelSearchContainer = (0, _system.styled)('div', {
  name: 'MuiDataGrid',
  slot: 'PivotPanelSearchContainer'
})({
  padding: _internals.vars.spacing(0, 1, 1)
});
function GridPivotPanelSearch(props) {
  const {
    onClear,
    value,
    onChange
  } = props;
  const rootProps = (0, _useGridRootProps.useGridRootProps)();
  const apiRef = (0, _useGridApiContext.useGridApiContext)();
  const classes = useUtilityClasses(rootProps);
  const handleKeyDown = event => {
    if (event.key === 'Escape') {
      onClear();
    }
  };
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(GridPivotPanelSearchContainer, {
    ownerState: rootProps,
    className: classes.container,
    children: /*#__PURE__*/(0, _jsxRuntime.jsx)(rootProps.slots.baseTextField, (0, _extends2.default)({
      size: "small",
      "aria-label": apiRef.current.getLocaleText('pivotSearchControlLabel'),
      placeholder: apiRef.current.getLocaleText('pivotSearchControlPlaceholder'),
      onKeyDown: handleKeyDown,
      fullWidth: true,
      slotProps: {
        input: {
          startAdornment: /*#__PURE__*/(0, _jsxRuntime.jsx)(rootProps.slots.pivotSearchIcon, {
            fontSize: "small"
          }),
          endAdornment: value ? /*#__PURE__*/(0, _jsxRuntime.jsx)(rootProps.slots.baseIconButton, {
            edge: "end",
            size: "small",
            onClick: onClear,
            "aria-label": apiRef.current.getLocaleText('pivotSearchControlClear'),
            children: /*#__PURE__*/(0, _jsxRuntime.jsx)(rootProps.slots.pivotSearchClearIcon, {
              fontSize: "small"
            })
          }) : null
        }
      }
    }, rootProps.slotProps?.baseTextField, {
      value: value,
      onChange: onChange
    }))
  });
}