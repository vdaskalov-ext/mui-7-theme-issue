import { GridRowId } from '@mui/x-data-grid';
import { GridStatePremium } from "../../../models/gridStatePremium.js";
import { GridAggregationPosition } from "./gridAggregationInterfaces.js";
export declare const gridAggregationStateSelector: import("@mui/x-data-grid").OutputSelector<GridStatePremium, unknown, import("./gridAggregationInterfaces.js").GridAggregationState>;
/**
 * Get the aggregation model, containing the aggregation function of each column.
 * If a column is not in the model, it is not aggregated.
 * @category Aggregation
 */
export declare const gridAggregationModelSelector: (args_0: import("react").RefObject<{
  state: GridStatePremium;
} | null>) => import("./gridAggregationInterfaces.js").GridAggregationModel;
/**
 * Get the aggregation results as a lookup.
 * @category Aggregation
 */
export declare const gridAggregationLookupSelector: (args_0: import("react").RefObject<{
  state: GridStatePremium;
} | null>) => import("./gridAggregationInterfaces.js").GridAggregationLookup;
export declare const gridCellAggregationResultSelector: (args_0: import("react").RefObject<{
  state: GridStatePremium;
} | null>, args_1: {
  id: GridRowId;
  field: string;
}) => {
  position: GridAggregationPosition;
  value: any;
} | null;